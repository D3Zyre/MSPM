function [runs] = Test_set_2HzOpBeta()
% title: String: Filename under which the test data will be saved
% simTime: double: Maximum simulation time over which the model will run
% SS: logical:  True/False on whether or not the model will stop on steady state
% movement_option: character: 'C' Continuous, 'V' Variable Speed
% rpm: Starting speed in RPMS
% max_dt = maximum timestep used by the model
% SourceTemp = Source Temperature assigned to model
% SinkTemp = Sink Temperature assigned to model
% EnginePressure = Pressure assigned to internal gas zones

%% Default parameters
runs(8) = struct(...
  'Model','BestBeta - 5-95 - 5in Eff 0,8 BELL 5 atm 0,95 por 0,1mm Insulated Detatched, Variable Displacer - Efficiency - 3,5Hz - Optimized',...
  'title','',...
  'simTime',20,... [s]
  'SS',true,...
  'movement_option','C',...
  'rpm',60,... [rpm]
  'max_dt',0.1,... [s]
	'SourceTemp',95 + 273.15,... [K]
  'SinkTemp',5 + 273.15,... [K]
  'EnginePressure',101325*5, ...
  'NodeFactor', double(1.0), ...
  'HX_Convection', 1, ...
  'Regen_Convection', 1, ...
  'Outside_Matrix_Convection', 1, ...
  'Friction', 1, ...
  'Solid_Conduction', 1, ...
  'Axial_Mixing_Coefficient', 1);
for i = 1:length(runs)-1
  runs(i) = runs(end);
end

%{
StrSpeeds = {'0,2','0,555767', '0,6007', ...
  '0,702133', '0,905133', '1,089633', ...
  '1,19915', '1,271017',  '1,40555', ...
  '1,582467', '1,8132', '2,0'};
NumSpeeds = [12, 33.346, 36.042, 42.128, ...
  54.308, 65.378, 71.949, 76.261, ...
  84.333, 94.948, 108.792, 120];
%}
StrSpeeds = {'0,5', '1,0', '1,5', '2,0', '2,5', '3,0', '3,5', '4,0'};
NumSpeeds = [30, 60, 90, 120, 150, 180, 210, 240];

for i = 1:length(StrSpeeds)
  runs(i).Model = 'BestBeta - 5-95 - 5in Eff 0,8 BELL 5 atm 0,95 por 0,1mm Insulated Detatched, Variable Displacer - Efficiency - 3,5Hz - Optimized';
  runs(i).title = ['Best Beta 2Hz Optimum at ' StrSpeeds{i}];
  runs(i).rpm = NumSpeeds(i);
end
end


